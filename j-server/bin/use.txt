博文地址：https://www.cnblogs.com/wuzhenzhao/p/9962250.html
什么是RPC框架：　　
　　RPC（Remote Procedure Call,远程过程调用），一般用来实现部署在不同机器上的系统之间的方法调用，使得程序能够像访问本地系统资源一样，通过网络传输去访问远端系统资源；对于客户端来说， 传输层使用什么协议，序列化、反序列化都是透明的。

　　在分布式架构中，难免会涉及多个独立的服务之间的通讯，比如一个简单的电商系统中，按照业务领域拆分成三个独立的应用，用户，订单，商品三者之间，当商品模块需要访问用户模块，获取该用户是否购买该商品等等的业务场景，就会设计独立服务之间的通讯。这个时候需要用到远程的服务调用。其中阿里的 dubbo框架就是目前最主流的RPC框架。

　　要实现一个简单的RPC需要考虑到什么呢？ 两个服务之间的通讯，基于 TCP/IP通讯的基础之上，进行远程服务调用需要进行序列化，通过动态代码获得服务的代理对象，还有传输的安全性，服务管理，然后进行传输，在被调用方需要进行反序列化解析，通过反射去调用方法，并返回请求结果。


序列化和反序列化：
客户端需要服务端的接口但是不需要实现，就把上面的接口复制到客户端的项目里就可以。
下面我们需要去编写这个进行序列化传输的对象，必须实现序列化接口，而且这个 serialVersionUID 是唯一的，然后在服务端也有一个同样的类进行反序列化。
 serialVersionUID要一致，不然会导致反序列化失败
 
 
-----------------总结--------------------
客户端发送用outputstream,接受inputstream
服务端接受用inputstream,发送outputStream